@echo off
REM The following variables are Base64 encoded strings for unrpyc and rpatool
REM Due to batch limitations on variable lengths, they need to be split into
REM multiple variables, and joined later using powershell.
REM --------------------------------------------------------------------------------
REM rpatool f2520ad - https://github.com/Shizmob/rpatool
REM --------------------------------------------------------------------------------
set rpatool1=IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwoKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBwcmludF9mdW5jdGlvbgoKaW1wb3J0IHN5cwppbXBvcnQgb3MKaW1wb3J0IGNvZGVjcwppbXBvcnQgcGlja2xlCmltcG9ydCBlcnJubwppbXBvcnQgcmFuZG9tCnRyeToKICAgIGltcG9ydCBwaWNrbGU1IGFzIHBpY2tsZQpleGNlcHQ6CiAgICBpbXBvcnQgcGlja2xlCiAgICBpZiBzeXMudmVyc2lvbl9pbmZvIDwgKDMsIDgpOgogICAgICAgIHByaW50KCd3YXJuaW5nOiBwaWNrbGU1IG1vZHVsZSBjb3VsZCBub3QgYmUgbG9hZGVkIGFuZCBQeXRob24gdmVyc2lvbiBpcyA8IDMuOCwnLCBmaWxlPXN5cy5zdGRlcnIpCiAgICAgICAgcHJpbnQoJyAgICAgICAgIG5ld2VyIFJlblwnUHkgZ2FtZXMgbWF5IGZhaWwgdG8gdW5wYWNrIScsIGZpbGU9c3lzLnN0ZGVycikKICAgICAgICBpZiBzeXMudmVyc2lvbl9pbmZvID49ICgzLCA1KToKICAgICAgICAgICAgcHJpbnQoJyAgICAgICAgIGlmIHRoaXMgb2NjdXJzLCBmaXggaXQgYnkgaW5zdGFsbGluZyBwaWNrbGU1OicsIGZpbGU9c3lzLnN0ZGVycikKICAgICAgICAgICAgcHJpbnQoJyAgICAgICAgICAgICB7fSAtbSBwaXAgaW5zdGFsbCBwaWNrbGU1Jy5mb3JtYXQoc3lzLmV4ZWN1dGFibGUpLCBmaWxlPXN5cy5zdGRlcnIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcHJpbnQoJyAgICAgICAgIGlmIHRoaXMgb2NjdXJzLCBwbGVhc2UgdXBncmFkZSB0byBhIG5ld2VyIFB5dGhvbiAoPj0gMy41KS4nLCBmaWxlPXN5cy5zdGRlcnIpCiAgICAgICAgcHJpbnQoZmlsZT1zeXMuc3RkZXJyKQoKCmlmIHN5cy52ZXJzaW9uX2luZm9bMF0gPj0gMzoKICAgIGRlZiBfdW5pY29kZSh0ZXh0KToKICAgICAgICByZXR1cm4gdGV4dAoKICAgIGRlZiBfcHJpbnRhYmxlKHRleHQpOgogICAgICAgIHJldHVybiB0ZXh0CgogICAgZGVmIF91bm1hbmdsZShkYXRhKToKICAgICAgICBpZiB0eXBlKGRhdGEpID09IGJ5dGVzOgogICAgICAgICAgICByZXR1cm4gZGF0YQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBkYXRhLmVuY29kZSgnbGF0aW4xJykKCiAgICBkZWYgX3VucGlja2xlKGRhdGEpOgogICAgICAgICMgU3BlY2lmeSBsYXRpbjEgZW5jb2RpbmcgdG8gcHJldmVudCByYXcgYnl0ZSB2YWx1ZXMgZnJvbSBjYXVzaW5nIGFuIEFTQ0lJIGRlY29kZSBlcnJvci4KICAgICAgICByZXR1cm4gcGlja2xlLmxvYWRzKGRhdGEsIGVuY29kaW5nPSdsYXRpbjEnKQplbGlmIHN5cy52ZXJzaW9uX2luZm9bMF0gPT0gMjoKICAgIGRlZiBfdW5pY29kZSh0ZXh0KToKICAgICAgICBpZiBpc2luc3RhbmNlKHRleHQsIHVuaWNvZGUpOgogICAgICAgICAgICByZXR1cm4gdGV4dAogICAgICAgIHJldHVybiB0ZXh0LmRlY29kZSgndXRmLTgnKQoKICAgIGRlZiBfcHJpbnRhYmxlKHRleHQpOgogICAgICAgIHJldHVybiB0ZXh0LmVuY29kZSgndXRmLTgnKQoKICAgIGRlZiBfdW5tYW5nbGUoZGF0YSk6CiAgICAgICAgcmV0dXJuIGRhdGEKCiAgICBkZWYgX3VucGlja2xlKGRhdGEpOgogICAgICAgIHJldHVybiBwaWNrbGUubG9hZHMoZGF0YSkKCmNsYXNzIFJlblB5QXJjaGl2ZToKICAgIGZpbGUgPSBOb25lCiAgICBoYW5kbGUgPSBOb25lCgogICAgZmlsZXMgPSB7fQogICAgaW5kZXhlcyA9IHt9CgogICAgdmVyc2lvbiA9IE5vbmUKICAgIHBhZGxlbmd0aCA9IDAKICAgIGtleSA9IE5vbmUKICAgIHZlcmJvc2UgPSBGYWxzZQoKICAgIFJQQTJfTUFHSUMgPSAnUlBBLTIuMCAnCiAgICBSUEEzX01BR0lDID0gJ1JQQS0zLjAgJwogICAgUlBBM18yX01BR0lDID0gJ1JQQS0zLjIgJwoKICAgICMgRm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHksIG90aGVyd2lzZSBQeXRob24zLXBhY2tlZCBhcmNoaXZlcyB3b24ndCBiZSByZWFkIGJ5IFB5dGhvbjIKICAgIFBJQ0tMRV9QUk9UT0NPTCA9IDIKCiAgICBkZWYgX19pbml0X18oc2VsZiwgZmlsZSA9IE5vbmUsIHZlcnNpb24gPSAzLCBwYWRsZW5ndGggPSAwLCBrZXkgPSAweERFQURCRUVGLCB2ZXJib3NlID0gRmFsc2UpOgogICAgICAgIHNlbGYucGFkbGVuZ3RoID0gcGFkbGVuZ3RoCiAgICAgICAgc2VsZi5rZXkgPSBrZXkKICAgICAgICBzZWxmLnZlcmJvc2UgPSB2ZXJib3NlCgogICAgICAgIGlmIGZpbGUgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIHNlbGYubG9hZChmaWxlKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNlbGYudmVyc2lvbiA9IHZlcnNpb24KCiAgICBkZWYgX19kZWxfXyhzZWxmKToKICAgICAgICBpZiBzZWxmLmhhbmRsZSBpcyBub3QgTm9uZToKICAgICAgICAgICAgc2VsZi5oYW5kbGUuY2xvc2UoKQoKICAgICMgRGV0ZXJtaW5lIGFyY2hpdmUgdmVyc2lvbi4KICAgIGRlZiBnZXRfdmVyc2lvbihzZWxmKToKICAgICAgICBzZWxmLmhhbmRsZS5zZWVrKDApCiAgICAgICAgbWFnaWMgPSBzZWxmLmhhbmRsZS5yZWFkbGluZSgpLmRlY29kZSgndXRmLTgnKQoKICAgICAgICBpZiBtYWdpYy5zdGFydHN3aXRoKHNlbGYuUlBBM18yX01BR0lDKToKICAgICAgICAgICAgcmV0dXJuIDMuMgogICAgICAgIGVsaWYgbWFnaWMuc3RhcnRzd2l0aChzZWxmLlJQQTNfTUFHSUMpOgogICAgICAgICAgICByZXR1cm4gMwogICAgICAgIGVsaWYgbWFnaWMuc3RhcnRzd2l0aChzZWxmLlJQQTJfTUFHSUMpOgogICAgICAgICAgICByZXR1cm4gMgogICAgICAgIGVsaWYgc2VsZi5maWxlLmVuZHN3aXRoKCcucnBpJyk6CiAgICAgICAgICAgIHJldHVybiAxCgogICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoJ3RoZSBnaXZlbiBmaWxlIGlzIG5vdCBhIHZhbGlkIFJlblwnUHkgYXJjaGl2ZSwgb3IgYW4gdW5zdXBwb3J0ZWQgdmVyc2lvbicpCgogICAgIyBFeHRyYWN0IGZpbGUgaW5kZXhlcyBmcm9tIG9wZW5lZCBhcmNoaXZlLgogICAgZGVmIGV4dHJhY3RfaW5kZXhlcyhzZWxmKToKICAgICAgICBzZWxmLmhhbmRsZS5zZWVrKDApCiAgICAgICAgaW5kZXhlcyA9IE5vbmUKCiAgICAgICAgaWYgc2VsZi52ZXJzaW9uIGluIFsyLCAzLCAzLjJdOgogICAgICAgICAgICAjIEZldGNoIG1ldGFkYXRhLgogICAgICAgICAgICBtZXRhZGF0YSA9IHNlbGYuaGFuZGxlLnJlYWRsaW5lKCkKICAgICAgICAgICAgdmFscyA9IG1ldGFkYXRhLnNwbGl0KCkKICAgICAgICAgICAgb2Zmc2V0ID0gaW50KHZhbHNbMV0sIDE2KQogICAgICAgICAgICBpZiBzZWxmLnZlcnNpb24gPT0gMzoKICAgICAgICAgICAgICAgIHNlbGYua2V5ID0gMAogICAgICAgICAgICAgICAgZm9yIHN1YmtleSBpbiB2YWxzWzI6XToKICAgICAgICAgICAgICAgICAgICBzZWxmLmtleSBePSBpbnQoc3Via2V5LCAxNikKICAgICAgICAgICAgZWxpZiBzZWxmLnZlcnNpb24gPT0gMy4yOgogICAgICAgICAgICAgICAgc2VsZi5rZXkgPSAwCiAgICAgICAgICAgICAgICBmb3Igc3Via2V5IGluIHZhbHNbMzpdOgogICAgICAgICAgICAgICAgICAgIHNlbGYua2V5IF49IGludChzdWJrZXksIDE2KQoKICAgICAgICAgICAgIyBMb2FkIGluIGluZGV4ZXMuCiAgICAgICAgICAgIHNlbGYuaGFuZGxlLnNlZWsob2Zmc2V0KQogICAgICAgICAgICBjb250ZW50cyA9IGNvZGVjcy5kZWNvZGUoc2VsZi5oYW5kbGUucmVhZCgpLCAnemxpYicpCiAgICAgICAgICAgIGluZGV4ZXMgPSBfdW5waWNrbGUoY29udGVudHMpCgogICAgICAg
set rpatool2=ICAgICAjIERlb2JmdXNjYXRlIGluZGV4ZXMuCiAgICAgICAgICAgIGlmIHNlbGYudmVyc2lvbiBpbiBbMywgMy4yXToKICAgICAgICAgICAgICAgIG9iZnVzY2F0ZWRfaW5kZXhlcyA9IGluZGV4ZXMKICAgICAgICAgICAgICAgIGluZGV4ZXMgPSB7fQogICAgICAgICAgICAgICAgZm9yIGkgaW4gb2JmdXNjYXRlZF9pbmRleGVzLmtleXMoKToKICAgICAgICAgICAgICAgICAgICBpZiBsZW4ob2JmdXNjYXRlZF9pbmRleGVzW2ldWzBdKSA9PSAyOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleGVzW2ldID0gWyAob2Zmc2V0IF4gc2VsZi5rZXksIGxlbmd0aCBeIHNlbGYua2V5KSBmb3Igb2Zmc2V0LCBsZW5ndGggaW4gb2JmdXNjYXRlZF9pbmRleGVzW2ldIF0KICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBpbmRleGVzW2ldID0gWyAob2Zmc2V0IF4gc2VsZi5rZXksIGxlbmd0aCBeIHNlbGYua2V5LCBwcmVmaXgpIGZvciBvZmZzZXQsIGxlbmd0aCwgcHJlZml4IGluIG9iZnVzY2F0ZWRfaW5kZXhlc1tpXSBdCiAgICAgICAgZWxzZToKICAgICAgICAgICAgaW5kZXhlcyA9IHBpY2tsZS5sb2Fkcyhjb2RlY3MuZGVjb2RlKHNlbGYuaGFuZGxlLnJlYWQoKSwgJ3psaWInKSkKCiAgICAgICAgcmV0dXJuIGluZGV4ZXMKCiAgICAjIEdlbmVyYXRlIHBzZXVkb3JhbmRvbSBwYWRkaW5nIChmb3Igd2hhdGV2ZXIgcmVhc29uKS4KICAgIGRlZiBnZW5lcmF0ZV9wYWRkaW5nKHNlbGYpOgogICAgICAgIGxlbmd0aCA9IHJhbmRvbS5yYW5kaW50KDEsIHNlbGYucGFkbGVuZ3RoKQoKICAgICAgICBwYWRkaW5nID0gJycKICAgICAgICB3aGlsZSBsZW5ndGggPiAwOgogICAgICAgICAgICBwYWRkaW5nICs9IGNocihyYW5kb20ucmFuZGludCgxLCAyNTUpKQogICAgICAgICAgICBsZW5ndGggLT0gMQoKICAgICAgICByZXR1cm4gYnl0ZXMocGFkZGluZywgJ3V0Zi04JykKCiAgICAjIENvbnZlcnRzIGEgZmlsZW5hbWUgdG8gYXJjaGl2ZSBmb3JtYXQuCiAgICBkZWYgY29udmVydF9maWxlbmFtZShzZWxmLCBmaWxlbmFtZSk6CiAgICAgICAgKGRyaXZlLCBmaWxlbmFtZSkgPSBvcy5wYXRoLnNwbGl0ZHJpdmUob3MucGF0aC5ub3JtcGF0aChmaWxlbmFtZSkucmVwbGFjZShvcy5zZXAsICcvJykpCiAgICAgICAgcmV0dXJuIGZpbGVuYW1lCgogICAgIyBEZWJ1ZyAodmVyYm9zZSkgbWVzc2FnZXMuCiAgICBkZWYgdmVyYm9zZV9wcmludChzZWxmLCBtZXNzYWdlKToKICAgICAgICBpZiBzZWxmLnZlcmJvc2U6CiAgICAgICAgICAgIHByaW50KG1lc3NhZ2UpCgoKICAgICMgTGlzdCBmaWxlcyBpbiBhcmNoaXZlIGFuZCBjdXJyZW50IGludGVybmFsIHN0b3JhZ2UuCiAgICBkZWYgbGlzdChzZWxmKToKICAgICAgICByZXR1cm4gbGlzdChzZWxmLmluZGV4ZXMua2V5cygpKSArIGxpc3Qoc2VsZi5maWxlcy5rZXlzKCkpCgogICAgIyBDaGVjayBpZiBhIGZpbGUgZXhpc3RzIGluIHRoZSBhcmNoaXZlLgogICAgZGVmIGhhc19maWxlKHNlbGYsIGZpbGVuYW1lKToKICAgICAgICBmaWxlbmFtZSA9IF91bmljb2RlKGZpbGVuYW1lKQogICAgICAgIHJldHVybiBmaWxlbmFtZSBpbiBzZWxmLmluZGV4ZXMua2V5cygpIG9yIGZpbGVuYW1lIGluIHNlbGYuZmlsZXMua2V5cygpCgogICAgIyBSZWFkIGZpbGUgZnJvbSBhcmNoaXZlIG9yIGludGVybmFsIHN0b3JhZ2UuCiAgICBkZWYgcmVhZChzZWxmLCBmaWxlbmFtZSk6CiAgICAgICAgZmlsZW5hbWUgPSBzZWxmLmNvbnZlcnRfZmlsZW5hbWUoX3VuaWNvZGUoZmlsZW5hbWUpKQoKICAgICAgICAjIENoZWNrIGlmIHRoZSBmaWxlIGV4aXN0cyBpbiBvdXIgaW5kZXhlcy4KICAgICAgICBpZiBmaWxlbmFtZSBub3QgaW4gc2VsZi5maWxlcyBhbmQgZmlsZW5hbWUgbm90IGluIHNlbGYuaW5kZXhlczoKICAgICAgICAgICAgcmFpc2UgSU9FcnJvcihlcnJuby5FTk9FTlQsICd0aGUgcmVxdWVzdGVkIGZpbGUgezB9IGRvZXMgbm90IGV4aXN0IGluIHRoZSBnaXZlbiBSZW5cJ1B5IGFyY2hpdmUnLmZvcm1hdCgKICAgICAgICAgICAgICAgIF9wcmludGFibGUoZmlsZW5hbWUpKSkKCiAgICAgICAgIyBJZiBpdCdzIGluIG91ciBvcGVuZWQgYXJjaGl2ZSBpbmRleCwgYW5kIG91ciBhcmNoaXZlIGhhbmRsZSBpc24ndCB2YWxpZCwgc29tZXRoaW5nIGlzIG9idmlvdXNseSB3cm9uZy4KICAgICAgICBpZiBmaWxlbmFtZSBub3QgaW4gc2VsZi5maWxlcyBhbmQgZmlsZW5hbWUgaW4gc2VsZi5pbmRleGVzIGFuZCBzZWxmLmhhbmRsZSBpcyBOb25lOgogICAgICAgICAgICByYWlzZSBJT0Vycm9yKGVycm5vLkVOT0VOVCwgJ3RoZSByZXF1ZXN0ZWQgZmlsZSB7MH0gZG9lcyBub3QgZXhpc3QgaW4gdGhlIGdpdmVuIFJlblwnUHkgYXJjaGl2ZScuZm9ybWF0KAogICAgICAgICAgICAgICAgX3ByaW50YWJsZShmaWxlbmFtZSkpKQoKICAgICAgICAjIENoZWNrIG91ciBzaW1wbGlmaWVkIGludGVybmFsIGluZGV4ZXMgZmlyc3QsIGluIGNhc2Ugc29tZW9uZSB3YW50cyB0byByZWFkIGEgZmlsZSB0aGV5IGFkZGVkIGJlZm9yZSB3aXRob3V0IHNhdmluZywgZm9yIHNvbWUgdW5ob2x5IHJlYXNvbi4KICAgICAgICBpZiBmaWxlbmFtZSBpbiBzZWxmLmZpbGVzOgogICAgICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ1JlYWRpbmcgZmlsZSB7MH0gZnJvbSBpbnRlcm5hbCBzdG9yYWdlLi4uJy5mb3JtYXQoX3ByaW50YWJsZShmaWxlbmFtZSkpKQogICAgICAgICAgICByZXR1cm4gc2VsZi5maWxlc1tmaWxlbmFtZV0KICAgICAgICAjIFdlIG5lZWQgdG8gcmVhZCB0aGUgZmlsZSBmcm9tIG91ciBvcGVuIGFyY2hpdmUuCiAgICAgICAgZWxzZToKICAgICAgICAgICAgIyBSZWFkIG9mZnNldCBhbmQgbGVuZ3RoLCBzZWVrIHRvIHRoZSBvZmZzZXQgYW5kIHJlYWQgdGhlIGZpbGUgY29udGVudHMuCiAgICAgICAgICAgIGlmIGxlbihzZWxmLmluZGV4ZXNbZmlsZW5hbWVdWzBdKSA9PSAzOgogICAgICAgICAgICAgICAgKG9mZnNldCwgbGVuZ3RoLCBwcmVmaXgpID0gc2VsZi5pbmRleGVzW2ZpbGVuYW1lXVswXQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgKG9mZnNldCwgbGVuZ3RoKSA9IHNlbGYuaW5kZXhlc1tmaWxlbmFtZV1bMF0KICAgICAgICAgICAgICAgIHByZWZpeCA9ICcnCgogICAgICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ1JlYWRpbmcgZmlsZSB7MH0gZnJvbSBkYXRhIGZpbGUgezF9Li4uIChvZmZzZXQgPSB7Mn0sIGxlbmd0aCA9IHszfSBieXRlcyknLmZvcm1hdCgKICAgICAgICAgICAgICAgIF9wcmludGFibGUoZmlsZW5hbWUpLCBzZWxmLmZpbGUsIG9mZnNldCwgbGVuZ3RoKSkKICAgICAgICAgICAgc2VsZi5oYW5kbGUuc2VlayhvZmZzZXQpCiAgICAgICAgICAgIHJldHVybiBfdW5tYW5nbGUocHJlZml4KSArIHNlbGYuaGFuZGxlLnJlYWQobGVuZ3RoIC0gbGVuKHByZWZpeCkpCgogICAgIyBNb2RpZnkgYSBmaWxlIGluIGFyY2hpdmUgb3IgaW50ZXJuYWwgc3RvcmFnZS4KICAgIGRlZiBjaGFuZ2Uoc2VsZiwgZmlsZW5hbWUsIGNvbnRlbnRzKToKICAgICAgICBmaWxlbmFtZSA9IF91bmljb2RlKGZpbGVuYW1lKQoKICAgICAgICAjIE91ciAnY2hhbmdlJyBpcyBiYXNpY2FsbHkgcmVtb3ZpbmcgdGhlIGZpbGUgZnJvbSBvdXIgaW5kZXhlcyBmaXJz
set rpatool3=dCwgYW5kIHRoZW4gcmUtYWRkaW5nIGl0LgogICAgICAgIHNlbGYucmVtb3ZlKGZpbGVuYW1lKQogICAgICAgIHNlbGYuYWRkKGZpbGVuYW1lLCBjb250ZW50cykKCiAgICAjIEFkZCBhIGZpbGUgdG8gdGhlIGludGVybmFsIHN0b3JhZ2UuCiAgICBkZWYgYWRkKHNlbGYsIGZpbGVuYW1lLCBjb250ZW50cyk6CiAgICAgICAgZmlsZW5hbWUgPSBzZWxmLmNvbnZlcnRfZmlsZW5hbWUoX3VuaWNvZGUoZmlsZW5hbWUpKQogICAgICAgIGlmIGZpbGVuYW1lIGluIHNlbGYuZmlsZXMgb3IgZmlsZW5hbWUgaW4gc2VsZi5pbmRleGVzOgogICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCdmaWxlIHswfSBhbHJlYWR5IGV4aXN0cyBpbiBhcmNoaXZlJy5mb3JtYXQoX3ByaW50YWJsZShmaWxlbmFtZSkpKQoKICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ0FkZGluZyBmaWxlIHswfSB0byBhcmNoaXZlLi4uIChsZW5ndGggPSB7MX0gYnl0ZXMpJy5mb3JtYXQoCiAgICAgICAgICAgIF9wcmludGFibGUoZmlsZW5hbWUpLCBsZW4oY29udGVudHMpKSkKICAgICAgICBzZWxmLmZpbGVzW2ZpbGVuYW1lXSA9IGNvbnRlbnRzCgogICAgIyBSZW1vdmUgYSBmaWxlIGZyb20gYXJjaGl2ZSBvciBpbnRlcm5hbCBzdG9yYWdlLgogICAgZGVmIHJlbW92ZShzZWxmLCBmaWxlbmFtZSk6CiAgICAgICAgZmlsZW5hbWUgPSBfdW5pY29kZShmaWxlbmFtZSkKICAgICAgICBpZiBmaWxlbmFtZSBpbiBzZWxmLmZpbGVzOgogICAgICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ1JlbW92aW5nIGZpbGUgezB9IGZyb20gaW50ZXJuYWwgc3RvcmFnZS4uLicuZm9ybWF0KF9wcmludGFibGUoZmlsZW5hbWUpKSkKICAgICAgICAgICAgZGVsIHNlbGYuZmlsZXNbZmlsZW5hbWVdCiAgICAgICAgZWxpZiBmaWxlbmFtZSBpbiBzZWxmLmluZGV4ZXM6CiAgICAgICAgICAgIHNlbGYudmVyYm9zZV9wcmludCgnUmVtb3ZpbmcgZmlsZSB7MH0gZnJvbSBhcmNoaXZlIGluZGV4ZXMuLi4nLmZvcm1hdChfcHJpbnRhYmxlKGZpbGVuYW1lKSkpCiAgICAgICAgICAgIGRlbCBzZWxmLmluZGV4ZXNbZmlsZW5hbWVdCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgSU9FcnJvcihlcnJuby5FTk9FTlQsICd0aGUgcmVxdWVzdGVkIGZpbGUgezB9IGRvZXMgbm90IGV4aXN0IGluIHRoaXMgYXJjaGl2ZScuZm9ybWF0KF9wcmludGFibGUoZmlsZW5hbWUpKSkKCiAgICAjIExvYWQgYXJjaGl2ZS4KICAgIGRlZiBsb2FkKHNlbGYsIGZpbGVuYW1lKToKICAgICAgICBmaWxlbmFtZSA9IF91bmljb2RlKGZpbGVuYW1lKQoKICAgICAgICBpZiBzZWxmLmhhbmRsZSBpcyBub3QgTm9uZToKICAgICAgICAgICAgc2VsZi5oYW5kbGUuY2xvc2UoKQogICAgICAgIHNlbGYuZmlsZSA9IGZpbGVuYW1lCiAgICAgICAgc2VsZi5maWxlcyA9IHt9CiAgICAgICAgc2VsZi5oYW5kbGUgPSBvcGVuKHNlbGYuZmlsZSwgJ3JiJykKICAgICAgICBzZWxmLnZlcnNpb24gPSBzZWxmLmdldF92ZXJzaW9uKCkKICAgICAgICBzZWxmLmluZGV4ZXMgPSBzZWxmLmV4dHJhY3RfaW5kZXhlcygpCgogICAgIyBTYXZlIGN1cnJlbnQgc3RhdGUgaW50byBhIG5ldyBmaWxlLCBtZXJnaW5nIGFyY2hpdmUgYW5kIGludGVybmFsIHN0b3JhZ2UsIHJlYnVpbGRpbmcgaW5kZXhlcywgYW5kIG9wdGlvbmFsbHkgc2F2aW5nIGluIGFub3RoZXIgZm9ybWF0IHZlcnNpb24uCiAgICBkZWYgc2F2ZShzZWxmLCBmaWxlbmFtZSA9IE5vbmUpOgogICAgICAgIGZpbGVuYW1lID0gX3VuaWNvZGUoZmlsZW5hbWUpCgogICAgICAgIGlmIGZpbGVuYW1lIGlzIE5vbmU6CiAgICAgICAgICAgIGZpbGVuYW1lID0gc2VsZi5maWxlCiAgICAgICAgaWYgZmlsZW5hbWUgaXMgTm9uZToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcignbm8gdGFyZ2V0IGZpbGUgZm91bmQgZm9yIHNhdmluZyBhcmNoaXZlJykKICAgICAgICBpZiBzZWxmLnZlcnNpb24gIT0gMiBhbmQgc2VsZi52ZXJzaW9uICE9IDM6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoJ3NhdmluZyBpcyBvbmx5IHN1cHBvcnRlZCBmb3IgdmVyc2lvbiAyIGFuZCAzIGFyY2hpdmVzJykKCiAgICAgICAgc2VsZi52ZXJib3NlX3ByaW50KCdSZWJ1aWxkaW5nIGFyY2hpdmUgaW5kZXguLi4nKQogICAgICAgICMgRmlsbCBvdXIgb3duIGZpbGVzIHN0cnVjdHVyZSB3aXRoIHRoZSBmaWxlcyBhZGRlZCBvciBjaGFuZ2VkIGluIHRoaXMgc2Vzc2lvbi4KICAgICAgICBmaWxlcyA9IHNlbGYuZmlsZXMKICAgICAgICAjIEZpcnN0LCByZWFkIGZpbGVzIGZyb20gdGhlIGN1cnJlbnQgYXJjaGl2ZSBpbnRvIG91ciBmaWxlcyBzdHJ1Y3R1cmUuCiAgICAgICAgZm9yIGZpbGUgaW4gbGlzdChzZWxmLmluZGV4ZXMua2V5cygpKToKICAgICAgICAgICAgY29udGVudCA9IHNlbGYucmVhZChmaWxlKQogICAgICAgICAgICAjIFJlbW92ZSBmcm9tIGluZGV4ZXMgYXJyYXkgb25jZSByZWFkLCBhZGQgdG8gb3VyIG93biBhcnJheS4KICAgICAgICAgICAgZGVsIHNlbGYuaW5kZXhlc1tmaWxlXQogICAgICAgICAgICBmaWxlc1tmaWxlXSA9IGNvbnRlbnQKCiAgICAgICAgIyBQcmVkaWN0IGhlYWRlciBsZW5ndGgsIHdlJ2xsIHdyaXRlIHRoYXQgb25lIGxhc3QuCiAgICAgICAgb2Zmc2V0ID0gMAogICAgICAgIGlmIHNlbGYudmVyc2lvbiA9PSAzOgogICAgICAgICAgICBvZmZzZXQgPSAzNAogICAgICAgIGVsaWYgc2VsZi52ZXJzaW9uID09IDI6CiAgICAgICAgICAgIG9mZnNldCA9IDI1CiAgICAgICAgYXJjaGl2ZSA9IG9wZW4oZmlsZW5hbWUsICd3YicpCiAgICAgICAgYXJjaGl2ZS5zZWVrKG9mZnNldCkKCiAgICAgICAgIyBCdWlsZCBvdXIgb3duIGluZGV4ZXMgd2hpbGUgd3JpdGluZyBmaWxlcyB0byB0aGUgYXJjaGl2ZS4KICAgICAgICBpbmRleGVzID0ge30KICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ1dyaXRpbmcgZmlsZXMgdG8gYXJjaGl2ZSBmaWxlLi4uJykKICAgICAgICBmb3IgZmlsZSwgY29udGVudCBpbiBmaWxlcy5pdGVtcygpOgogICAgICAgICAgICAjIEdlbmVyYXRlIHJhbmRvbSBwYWRkaW5nLCBmb3Igd2hhdGV2ZXIgcmVhc29uLgogICAgICAgICAgICBpZiBzZWxmLnBhZGxlbmd0aCA+IDA6CiAgICAgICAgICAgICAgICBwYWRkaW5nID0gc2VsZi5nZW5lcmF0ZV9wYWRkaW5nKCkKICAgICAgICAgICAgICAgIGFyY2hpdmUud3JpdGUocGFkZGluZykKICAgICAgICAgICAgICAgIG9mZnNldCArPSBsZW4ocGFkZGluZykKCiAgICAgICAgICAgIGFyY2hpdmUud3JpdGUoY29udGVudCkKICAgICAgICAgICAgIyBVcGRhdGUgaW5kZXguCiAgICAgICAgICAgIGlmIHNlbGYudmVyc2lvbiA9PSAzOgogICAgICAgICAgICAgICAgaW5kZXhlc1tmaWxlXSA9IFsgKG9mZnNldCBeIHNlbGYua2V5LCBsZW4oY29udGVudCkgXiBzZWxmLmtleSkgXQogICAgICAgICAgICBlbGlmIHNlbGYudmVyc2lvbiA9PSAyOgogICAgICAgICAgICAgICAgaW5kZXhlc1tmaWxlXSA9IFsgKG9mZnNldCwgbGVuKGNvbnRlbnQpKSBdCiAgICAgICAgICAgIG9mZnNldCArPSBsZW4oY29udGVudCkKCiAgICAgICAgIyBXcml0ZSB0aGUgaW5kZXhlcy4KICAgICAgICBzZWxmLnZlcmJvc2VfcHJpbnQoJ1dyaXRpbmcgYXJjaGl2ZSBpbmRleCB0byBhcmNoaXZlIGZpbGUuLi4nKQogICAgICAgIGFy
set rpatool4=Y2hpdmUud3JpdGUoY29kZWNzLmVuY29kZShwaWNrbGUuZHVtcHMoaW5kZXhlcywgc2VsZi5QSUNLTEVfUFJPVE9DT0wpLCAnemxpYicpKQogICAgICAgICMgTm93IHdyaXRlIHRoZSBoZWFkZXIuCiAgICAgICAgc2VsZi52ZXJib3NlX3ByaW50KCdXcml0aW5nIGhlYWRlciB0byBhcmNoaXZlIGZpbGUuLi4gKHZlcnNpb24gPSBSUEF2ezB9KScuZm9ybWF0KHNlbGYudmVyc2lvbikpCiAgICAgICAgYXJjaGl2ZS5zZWVrKDApCiAgICAgICAgaWYgc2VsZi52ZXJzaW9uID09IDM6CiAgICAgICAgICAgIGFyY2hpdmUud3JpdGUoY29kZWNzLmVuY29kZSgne317OjAxNnh9IHs6MDh4fVxuJy5mb3JtYXQoc2VsZi5SUEEzX01BR0lDLCBvZmZzZXQsIHNlbGYua2V5KSkpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgYXJjaGl2ZS53cml0ZShjb2RlY3MuZW5jb2RlKCd7fXs6MDE2eH1cbicuZm9ybWF0KHNlbGYuUlBBMl9NQUdJQywgb2Zmc2V0KSkpCiAgICAgICAgIyBXZSdyZSBkb25lLCBjbG9zZSBpdC4KICAgICAgICBhcmNoaXZlLmNsb3NlKCkKCiAgICAgICAgIyBSZWxvYWQgdGhlIGZpbGUgaW4gb3VyIGlubmVyIGRhdGFiYXNlLgogICAgICAgIHNlbGYubG9hZChmaWxlbmFtZSkKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBpbXBvcnQgYXJncGFyc2UKCiAgICBwYXJzZXIgPSBhcmdwYXJzZS5Bcmd1bWVudFBhcnNlcigKICAgICAgICBkZXNjcmlwdGlvbj0nQSB0b29sIGZvciB3b3JraW5nIHdpdGggUmVuXCdQeSBhcmNoaXZlIGZpbGVzLicsCiAgICAgICAgZXBpbG9nPSdUaGUgRklMRSBhcmd1bWVudCBjYW4gb3B0aW9uYWxseSBiZSBpbiBBUkNISVZFPVJFQUwgZm9ybWF0LCBtYXBwaW5nIGEgZmlsZSBpbiB0aGUgYXJjaGl2ZSBmaWxlIHN5c3RlbSB0byBhIGZpbGUgb24geW91ciByZWFsIGZpbGUgc3lzdGVtLiBBbiBleGFtcGxlIG9mIHRoaXM6IHJwYXRvb2wgLXggdGVzdC5ycGEgc2NyaXB0LnJweWM9L2hvbWUvZm9vL3Rlc3QucnB5YycsCiAgICAgICAgYWRkX2hlbHA9RmFsc2UpCgogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnYXJjaGl2ZScsIG1ldGF2YXI9J0FSQ0hJVkUnLCBoZWxwPSdUaGUgUmVuXCdweSBhcmNoaXZlIGZpbGUgdG8gb3BlcmF0ZSBvbi4nKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnZmlsZXMnLCBtZXRhdmFyPSdGSUxFJywgbmFyZ3M9JyonLCBhY3Rpb249J2FwcGVuZCcsIGhlbHA9J1plcm8gb3IgbW9yZSBmaWxlcyB0byBvcGVyYXRlIG9uLicpCgogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLWwnLCAnLS1saXN0JywgYWN0aW9uPSdzdG9yZV90cnVlJywgaGVscD0nTGlzdCBmaWxlcyBpbiBhcmNoaXZlIEFSQ0hJVkUuJykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy14JywgJy0tZXh0cmFjdCcsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGhlbHA9J0V4dHJhY3QgRklMRXMgZnJvbSBBUkNISVZFLicpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctYycsICctLWNyZWF0ZScsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGhlbHA9J0NyZWF0aXZlIEFSQ0hJVkUgZnJvbSBGSUxFcy4nKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLWQnLCAnLS1kZWxldGUnLCBhY3Rpb249J3N0b3JlX3RydWUnLCBoZWxwPSdEZWxldGUgRklMRXMgZnJvbSBBUkNISVZFLicpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctYScsICctLWFwcGVuZCcsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGhlbHA9J0FwcGVuZCBGSUxFcyB0byBBUkNISVZFLicpCgogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLTInLCAnLS10d28nLCBhY3Rpb249J3N0b3JlX3RydWUnLCBoZWxwPSdVc2UgdGhlIFJQQXYyIGZvcm1hdCBmb3IgY3JlYXRpbmcvYXBwZW5kaW5nIHRvIGFyY2hpdmVzLicpCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctMycsICctLXRocmVlJywgYWN0aW9uPSdzdG9yZV90cnVlJywgaGVscD0nVXNlIHRoZSBSUEF2MyBmb3JtYXQgZm9yIGNyZWF0aW5nL2FwcGVuZGluZyB0byBhcmNoaXZlcyAoZGVmYXVsdCkuJykKCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctaycsICctLWtleScsIG1ldGF2YXI9J0tFWScsIGhlbHA9J1RoZSBvYmZ1c2NhdGlvbiBrZXkgdXNlZCBmb3IgY3JlYXRpbmcgUlBBdjMgYXJjaGl2ZXMsIGluIGhleGFkZWNpbWFsIChkZWZhdWx0OiAweERFQURCRUVGKS4nKQogICAgcGFyc2VyLmFkZF9hcmd1bWVudCgnLXAnLCAnLS1wYWRkaW5nJywgbWV0YXZhcj0nQ09VTlQnLCBoZWxwPSdUaGUgbWF4aW11bSBudW1iZXIgb2YgYnl0ZXMgb2YgcGFkZGluZyB0byBhZGQgYmV0d2VlbiBmaWxlcyAoZGVmYXVsdDogMCkuJykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1vJywgJy0tb3V0ZmlsZScsIGhlbHA9J0FuIGFsdGVybmF0aXZlIG91dHB1dCBhcmNoaXZlIGZpbGUgd2hlbiBhcHBlbmRpbmcgdG8gb3IgZGVsZXRpbmcgZnJvbSBhcmNoaXZlcywgb3Igb3V0cHV0IGRpcmVjdG9yeSB3aGVuIGV4dHJhY3RpbmcuJykKCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctaCcsICctLWhlbHAnLCBhY3Rpb249J2hlbHAnLCBoZWxwPSdQcmludCB0aGlzIGhlbHAgYW5kIGV4aXQuJykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy12JywgJy0tdmVyYm9zZScsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGhlbHA9J0JlIGEgYml0IG1vcmUgdmVyYm9zZSB3aGlsZSBwZXJmb3JtaW5nIG9wZXJhdGlvbnMuJykKICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1WJywgJy0tdmVyc2lvbicsIGFjdGlvbj0ndmVyc2lvbicsIHZlcnNpb249J3JwYXRvb2wgdjAuOCcsIGhlbHA9J1Nob3cgdmVyc2lvbiBpbmZvcm1hdGlvbi4nKQogICAgYXJndW1lbnRzID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQoKICAgICMgRGV0ZXJtaW5lIFJQQSB2ZXJzaW9uLgogICAgaWYgYXJndW1lbnRzLnR3bzoKICAgICAgICB2ZXJzaW9uID0gMgogICAgZWxzZToKICAgICAgICB2ZXJzaW9uID0gMwoKICAgICMgRGV0ZXJtaW5lIFJQQXYzIGtleS4KICAgIGlmICdrZXknIGluIGFyZ3VtZW50cyBhbmQgYXJndW1lbnRzLmtleSBpcyBub3QgTm9uZToKICAgICAgICBrZXkgPSBpbnQoYXJndW1lbnRzLmtleSwgMTYpCiAgICBlbHNlOgogICAgICAgIGtleSA9IDB4REVBREJFRUYKCiAgICAjIERldGVybWluZSBwYWRkaW5nIGJ5dGVzLgogICAgaWYgJ3BhZGRpbmcnIGluIGFyZ3VtZW50cyBhbmQgYXJndW1lbnRzLnBhZGRpbmcgaXMgbm90IE5vbmU6CiAgICAgICAgcGFkZGluZyA9IGludChhcmd1bWVudHMucGFkZGluZykKICAgIGVsc2U6CiAgICAgICAgcGFkZGluZyA9IDAKCiAgICAjIERldGVybWluZSBvdXRwdXQgZmlsZS9kaXJlY3RvcnkgYW5kIGlucHV0IGFyY2hpdmUKICAgIGlmIGFyZ3VtZW50cy5jcmVhdGU6CiAgICAgICAgYXJjaGl2ZSA9IE5vbmUKICAgICAgICBvdXRwdXQgPSBfdW5pY29kZShhcmd1bWVudHMuYXJjaGl2ZSkKICAgIGVsc2U6CiAgICAgICAgYXJjaGl2ZSA9IF91bmljb2RlKGFyZ3VtZW50cy5hcmNoaXZlKQogICAgICAgIGlmICdvdXRmaWxlJyBpbiBhcmd1bWVudHMgYW5kIGFyZ3VtZW50cy5vdXRmaWxlIGlzIG5vdCBOb25lOgogICAgICAgICAgICBvdXRwdXQgPSBfdW5pY29kZShhcmd1bWVudHMub3V0ZmlsZSkKICAgICAgICBlbHNlOgogICAgICAgICAgICAjIERlZmF1bHQgb3V0cHV0IGRpcmVjdG9yeSBmb3IgZXh0cmFj
set rpatool5=dGlvbiBpcyB0aGUgY3VycmVudCBkaXJlY3RvcnkuCiAgICAgICAgICAgIGlmIGFyZ3VtZW50cy5leHRyYWN0OgogICAgICAgICAgICAgICAgb3V0cHV0ID0gJy4nCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBvdXRwdXQgPSBfdW5pY29kZShhcmd1bWVudHMuYXJjaGl2ZSkKCiAgICAjIE5vcm1hbGl6ZSBmaWxlcy4KICAgIGlmIGxlbihhcmd1bWVudHMuZmlsZXMpID4gMCBhbmQgaXNpbnN0YW5jZShhcmd1bWVudHMuZmlsZXNbMF0sIGxpc3QpOgogICAgICAgIGFyZ3VtZW50cy5maWxlcyA9IGFyZ3VtZW50cy5maWxlc1swXQoKICAgIHRyeToKICAgICAgICBhcmNoaXZlID0gUmVuUHlBcmNoaXZlKGFyY2hpdmUsIHBhZGxlbmd0aD1wYWRkaW5nLCBrZXk9a2V5LCB2ZXJzaW9uPXZlcnNpb24sIHZlcmJvc2U9YXJndW1lbnRzLnZlcmJvc2UpCiAgICBleGNlcHQgSU9FcnJvciBhcyBlOgogICAgICAgIHByaW50KCdDb3VsZCBub3Qgb3BlbiBhcmNoaXZlIGZpbGUgezB9IGZvciByZWFkaW5nOiB7MX0nLmZvcm1hdChhcmNoaXZlLCBlKSwgZmlsZT1zeXMuc3RkZXJyKQogICAgICAgIHN5cy5leGl0KDEpCgogICAgaWYgYXJndW1lbnRzLmNyZWF0ZSBvciBhcmd1bWVudHMuYXBwZW5kOgogICAgICAgICMgV2UgbmVlZCB0aGlzIHNlcGVyYXRlIGZ1bmN0aW9uIHRvIHJlY3Vyc2l2ZWx5IHByb2Nlc3MgZGlyZWN0b3JpZXMuCiAgICAgICAgZGVmIGFkZF9maWxlKGZpbGVuYW1lKToKICAgICAgICAgICAgIyBJZiB0aGUgYXJjaGl2ZSBwYXRoIGRpZmZlcnMgZnJvbSB0aGUgYWN0dWFsIGZpbGUgcGF0aCwgYXMgZ2l2ZW4gaW4gdGhlIGFyZ3VtZW50LAogICAgICAgICAgICAjIGV4dHJhY3QgdGhlIGFyY2hpdmUgcGF0aCBhbmQgYWN0dWFsIGZpbGUgcGF0aC4KICAgICAgICAgICAgaWYgZmlsZW5hbWUuZmluZCgnPScpICE9IC0xOgogICAgICAgICAgICAgICAgKG91dGZpbGUsIGZpbGVuYW1lKSA9IGZpbGVuYW1lLnNwbGl0KCc9JywgMikKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIG91dGZpbGUgPSBmaWxlbmFtZQoKICAgICAgICAgICAgaWYgb3MucGF0aC5pc2RpcihmaWxlbmFtZSk6CiAgICAgICAgICAgICAgICBmb3IgZmlsZSBpbiBvcy5saXN0ZGlyKGZpbGVuYW1lKToKICAgICAgICAgICAgICAgICAgICAjIFdlIG5lZWQgdG8gZG8gdGhpcyBpbiBvcmRlciB0byBtYWludGFpbiBhIHBvc3NpYmxlIEFSQ0hJVkU9UkVBTCBtYXBwaW5nIGJldHdlZW4gZGlyZWN0b3JpZXMuCiAgICAgICAgICAgICAgICAgICAgYWRkX2ZpbGUob3V0ZmlsZSArIG9zLnNlcCArIGZpbGUgKyAnPScgKyBmaWxlbmFtZSArIG9zLnNlcCArIGZpbGUpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKGZpbGVuYW1lLCAncmInKSBhcyBmaWxlOgogICAgICAgICAgICAgICAgICAgICAgICBhcmNoaXZlLmFkZChvdXRmaWxlLCBmaWxlLnJlYWQoKSkKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBwcmludCgnQ291bGQgbm90IGFkZCBmaWxlIHswfSB0byBhcmNoaXZlOiB7MX0nLmZvcm1hdChmaWxlbmFtZSwgZSksIGZpbGU9c3lzLnN0ZGVycikKCiAgICAgICAgIyBJdGVyYXRlIG92ZXIgdGhlIGdpdmVuIGZpbGVzIHRvIGFkZCB0byBhcmNoaXZlLgogICAgICAgIGZvciBmaWxlbmFtZSBpbiBhcmd1bWVudHMuZmlsZXM6CiAgICAgICAgICAgIGFkZF9maWxlKF91bmljb2RlKGZpbGVuYW1lKSkKCiAgICAgICAgIyBTZXQgdmVyc2lvbiBmb3Igc2F2aW5nLCBhbmQgc2F2ZS4KICAgICAgICBhcmNoaXZlLnZlcnNpb24gPSB2ZXJzaW9uCiAgICAgICAgdHJ5OgogICAgICAgICAgICBhcmNoaXZlLnNhdmUob3V0cHV0KQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcHJpbnQoJ0NvdWxkIG5vdCBzYXZlIGFyY2hpdmUgZmlsZTogezB9Jy5mb3JtYXQoZSksIGZpbGU9c3lzLnN0ZGVycikKICAgIGVsaWYgYXJndW1lbnRzLmRlbGV0ZToKICAgICAgICAjIEl0ZXJhdGUgb3ZlciB0aGUgZ2l2ZW4gZmlsZXMgdG8gZGVsZXRlIGZyb20gdGhlIGFyY2hpdmUuCiAgICAgICAgZm9yIGZpbGVuYW1lIGluIGFyZ3VtZW50cy5maWxlczoKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgYXJjaGl2ZS5yZW1vdmUoZmlsZW5hbWUpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgIHByaW50KCdDb3VsZCBub3QgZGVsZXRlIGZpbGUgezB9IGZyb20gYXJjaGl2ZTogezF9Jy5mb3JtYXQoZmlsZW5hbWUsIGUpLCBmaWxlPXN5cy5zdGRlcnIpCgogICAgICAgICMgU2V0IHZlcnNpb24gZm9yIHNhdmluZywgYW5kIHNhdmUuCiAgICAgICAgYXJjaGl2ZS52ZXJzaW9uID0gdmVyc2lvbgogICAgICAgIHRyeToKICAgICAgICAgICAgYXJjaGl2ZS5zYXZlKG91dHB1dCkKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHByaW50KCdDb3VsZCBub3Qgc2F2ZSBhcmNoaXZlIGZpbGU6IHswfScuZm9ybWF0KGUpLCBmaWxlPXN5cy5zdGRlcnIpCiAgICBlbGlmIGFyZ3VtZW50cy5leHRyYWN0OgogICAgICAgICMgRWl0aGVyIGV4dHJhY3QgdGhlIGdpdmVuIGZpbGVzLCBvciBhbGwgZmlsZXMgaWYgbm8gZmlsZXMgYXJlIGdpdmVuLgogICAgICAgIGlmIGxlbihhcmd1bWVudHMuZmlsZXMpID4gMDoKICAgICAgICAgICAgZmlsZXMgPSBhcmd1bWVudHMuZmlsZXMKICAgICAgICBlbHNlOgogICAgICAgICAgICBmaWxlcyA9IGFyY2hpdmUubGlzdCgpCgogICAgICAgICMgQ3JlYXRlIG91dHB1dCBkaXJlY3RvcnkgaWYgbm90IHByZXNlbnQuCiAgICAgICAgaWYgbm90IG9zLnBhdGguZXhpc3RzKG91dHB1dCk6CiAgICAgICAgICAgIG9zLm1ha2VkaXJzKG91dHB1dCkKCiAgICAgICAgIyBJdGVyYXRlIG92ZXIgZmlsZXMgdG8gZXh0cmFjdC4KICAgICAgICBmb3IgZmlsZW5hbWUgaW4gZmlsZXM6CiAgICAgICAgICAgIGlmIGZpbGVuYW1lLmZpbmQoJz0nKSAhPSAtMToKICAgICAgICAgICAgICAgIChvdXRmaWxlLCBmaWxlbmFtZSkgPSBmaWxlbmFtZS5zcGxpdCgnPScsIDIpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBvdXRmaWxlID0gZmlsZW5hbWUKCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIGNvbnRlbnRzID0gYXJjaGl2ZS5yZWFkKGZpbGVuYW1lKQoKICAgICAgICAgICAgICAgICMgQ3JlYXRlIG91dHB1dCBkaXJlY3RvcnkgZm9yIGZpbGUgaWYgbm90IHByZXNlbnQuCiAgICAgICAgICAgICAgICBpZiBub3Qgb3MucGF0aC5leGlzdHMob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguam9pbihvdXRwdXQsIG91dGZpbGUpKSk6CiAgICAgICAgICAgICAgICAgICAgb3MubWFrZWRpcnMob3MucGF0aC5kaXJuYW1lKG9zLnBhdGguam9pbihvdXRwdXQsIG91dGZpbGUpKSkKCiAgICAgICAgICAgICAgICB3aXRoIG9wZW4ob3MucGF0aC5qb2luKG91dHB1dCwgb3V0ZmlsZSksICd3YicpIGFzIGZpbGU6CiAgICAgICAgICAgICAgICAgICAgZmlsZS53cml0ZShjb250ZW50cykKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgcHJpbnQoJ0NvdWxkIG5vdCBleHRy
set rpatool6=YWN0IGZpbGUgezB9IGZyb20gYXJjaGl2ZTogezF9Jy5mb3JtYXQoZmlsZW5hbWUsIGUpLCBmaWxlPXN5cy5zdGRlcnIpCiAgICBlbGlmIGFyZ3VtZW50cy5saXN0OgogICAgICAgICMgUHJpbnQgdGhlIHNvcnRlZCBmaWxlIGxpc3QuCiAgICAgICAgbGlzdCA9IGFyY2hpdmUubGlzdCgpCiAgICAgICAgbGlzdC5zb3J0KCkKICAgICAgICBmb3IgZmlsZSBpbiBsaXN0OgogICAgICAgICAgICBwcmludChmaWxlKQogICAgZWxzZToKICAgICAgICBwcmludCgnTm8gb3BlcmF0aW9uIGdpdmVuIDooJykKICAgICAgICBwcmludCgnVXNlIHswfSAtLWhlbHAgZm9yIHVzYWdlIGRldGFpbHMuJy5mb3JtYXQoc3lzLmFyZ3ZbMF0pKQoK
REM --------------------------------------------------------------------------------
REM cheat.py (4864 chars max)
REM --------------------------------------------------------------------------------
set cheat1=aW1wb3J0IHJlCgp2ID0gIjEuMyIKdGFiID0gIiAiICogNApuZXdsaW5lID0gIlxuIgoKIz09PT09PT09PT09PT0gIC4vc2NyZWVucy5ycHkgPT09PT09PT09CmRlZiBzY3JlZW5zKCk6CiAgICBmbj0iLi9zY3JlZW5zLnJweSIKICAgIHdpdGggb3BlbihmbiwgInIiKSBhcyBmaWxlOgogICAgICAgIGZjID0gZmlsZS5yZWFkKCkKCiAgICAjc2V0IHRpbWUgb2YgZGF5CiAgICBwYXR0PSd0ZXh0ICJce3ZzcGFjZT0wXH1ce2ZvbnQ9Zm9udHMvU2Fuc2F0aW9uX0JvbGRcLnR0Zlx9XHtjb2xvcj0jZmZmXH1ce3NpemU9IDIwXH0gRGF5IFxbZGF5XF0sIFxbd2Vla19kYXlcXSwgXFt0aW1lX25hbWVcXSg/UDxkbHY+KFwuIERlbGl2ZXJ5IGluIFxbZGVsaXZlcnlfZGF5XF0gZGF5c1wuKT8pIFx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iJzsKICAgIHJlcGw9J3RleHRidXR0b24gInt2c3BhY2U9MH17Zm9udD1mb250cy9TYW5zYXRpb25fQm9sZC50dGZ9e2NvbG9yPSNmZmZ9e3NpemU9IDIwfSBEYXkgW2RheV0sIFt3ZWVrX2RheV0sIFt0aW1lX25hbWVdXGc8ZGx2PiB7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBbU2V0VmFyaWFibGUoImRheXRpbWUiLCAwKSwgU2V0VmFyaWFibGUoInRpbWVfbmFtZSIsIHNldF90aW1lKGRheXRpbWUpKV0nOwogICAgZmMgPSByZS5zdWIocGF0dCwgcmVwbCwgZmMsIGZsYWdzPXJlLk0pCgogICAgI21vbmV5CiAgICBwYXR0PSd0ZXh0ICJce3ZzcGFjZT00MFx9XHtmb250PWZvbnRzL1NhbnNhdGlvbl9Cb2xkXC50dGZcfVx7Y29sb3I9I2ZmZlx9XHtzaXplPSAyMFx9IE1vbmV5OiBcW21vbmV5XF0sIHN1cHBsaWVzOiBcW3N1cHBsaWVzXF0gK1x7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iJzsKICAgIHJlcGw9J3RleHRidXR0b24gIntmb250PWZvbnRzL1NhbnNhdGlvbl9Cb2xkLnR0Zn17Y29sb3I9I2ZmZn17c2l6ZT0gMjB9IE1vbmV5OiBbbW9uZXldLCBzdXBwbGllczogW3N1cHBsaWVzXSB7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIHlwb3MgNDAgYWN0aW9uIFtTZXRWYXJpYWJsZSgibW9uZXkiLCBtb25leSArIDEwMCksIFNldFZhcmlhYmxlKCJzdXBwbGllcyIsIHN1cHBsaWVzICsgMTApXSc7CiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKCiAgICAjY29udHJvbCBzZXJ1bQogICAgcGF0dD0ndGV4dCAiXHt2c3BhY2U9NjkwXH1ce2ZvbnQ9Zm9udHMvU2Fuc2F0aW9uX0JvbGRcLnR0Zlx9XHtjb2xvcj0jKD9QPGNvbG9yPlswLTlBLUZhLWZdezMsfSlcfVx7c2l6ZT0gMThcfSBDb250cm9sIHNlcnVtOiBcW3NlcnVtXF0gXHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSInOwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9Zm9udHMvU2Fuc2F0aW9uX0JvbGQudHRmfXtjb2xvcj0jXGc8Y29sb3I+fXtzaXplPSAxOH0gQ29udHJvbCBzZXJ1bTogW3NlcnVtXSB7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIHlhbGlnbiAxLjAgYWN0aW9uIFNldFZhcmlhYmxlKCJzZXJ1bSIsIHNlcnVtKzMpJzsKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgICNjaGFyIGNvcnJ1cHRpb24KICAgIHBhdHQ9J3RleHQgIlx7Zm9udD12ZXRlcmFuIHR5cGV3cml0ZXJcLnR0Zlx9XHtjb2xvcj0jMDAwMDAwXH1ce3NpemU9IDMwXH1Db3JydXB0aW9uOiBcWyg/UDxuYW1lPlthLXpdKylfY29yclxdIFx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9dmV0ZXJhbiB0eXBld3JpdGVyLnR0Zn17Y29sb3I9IzAwMDAwMH17c2l6ZT0gMzB9Q29ycnVwdGlvbjogW1xnPG5hbWU+X2NvcnJdIHsvc2l6ZX17L2NvbG9yfXsvZm9udH0iIHN0eWxlICJndWlfdGV4dCIgYWN0aW9uIFNldFZhcmlhYmxlKCJcZzxuYW1lPl9jb3JyIiwgXGc8bmFtZT5fY29yciArIDEwKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgICNyZXNlYXJjaCBwb2ludHMgYW5kIHN1c3BpY2lvbgogICAgcGF0dD0ndGV4dCAiXHt2c3BhY2U9MjBcfVx7Zm9udD1mb250cy9TYW5zYXRpb25fQm9sZFwudHRmXH1ce2NvbG9yPSNmZmZcfVx7c2l6ZT0gMjBcfSAoP1A8ZD4oRGF5ICk/KVJlc2VhcmNoIHBvaW50czogXFtyZXNfcG9pbnRzXF0sIHN1c3BpY2lvbiBcW3N1c3BpY2lvblxdL1xbbWF4X3N1c3BpY2lvblxdIFx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9Zm9udHMvU2Fuc2F0aW9uX0JvbGQudHRmfXtjb2xvcj0jZmZmfXtzaXplPSAyMH0gXGc8ZD5SZXNlYXJjaCBwb2ludHM6IFtyZXNfcG9pbnRzXSwgc3VzcGljaW9uIFtzdXNwaWNpb25dL1ttYXhfc3VzcGljaW9uXSB7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIHlwb3MgMjAgYWN0aW9uIFtTZXRWYXJpYWJsZSgicmVzX3BvaW50cyIsIHJlc19wb2ludHMgKyAyMCksIFNldFZhcmlhYmxlKCJzdXNwaWNpb24iLHN1c3BpY2lvbiAtIDIpXScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgICN2ZXJhX3RydXN0CiAgICBwYXR0PSdcXFxcblxcXFxuQ3VycmVudCB0cnVzdDogXFt2ZXJhX3RydXN0XF1cey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IicKICAgIHJlcGw9J3svc2l6ZX17L2NvbG9yfXsvZm9udH0iXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dGJ1dHRvbiAie2ZvbnQ9dmV0ZXJhbiB0eXBld3JpdGVyLnR0Zn17Y29sb3I9IzAwMDAwMH17c2l6ZT0gMTh9XFxcXG5DdXJyZW50IHRydXN0OiBbdmVyYV90cnVzdF17L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgidmVyYV90cnVzdCIsIHZlcmFfdHJ1c3QgKyAxKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQogICAgCiAgICAjYWRkaW5nIGNoZWF0IHZlcnNpb24gdG8gcGxhY2VzCiAgICBwYXR0PSdcW2NvbmZpZ1wudmVyc2lvblxdJzsKICAgIHJlcGw9J1tjb25maWcudmVyc2lvbl0gQ2hlYXRWJyt2OwogICAgZmMgPSByZS5zdWIocGF0dCwgcmVwbCwgZmMsIGZsYWdzPXJlLk0pCiAgICAKICAgIHBhdHQ9Jyg/UDxwYWQ+IHsyLH0pdGV4dGJ1dHRvbiBfXCgiUHJlZnMiXCkgYWN0aW9uIFNob3dNZW51XChcJ3ByZWZlcmVuY2VzXCdcKScKICAgIHJlcGw9J1xnPHBhZD50ZXh0YnV0dG9uIF8oIlByZWZzIikgYWN0aW9uIFNob3dNZW51KFwncHJlZmVyZW5jZXNcJylcblxnPHBhZD50ZXh0YnV0dG9uIF8oIkNoZWF0VicrdisnIikgYWN0aW9uIE51bGxBY3Rpb24oKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKCiAgICB3aXRoIG9wZW4oZm4sICJ3IikgYXMgZmlsZToKICAgICAgICBmaWxlLndyaXRlKGZjKQoKICAgIHByaW50IChmbisiIHBhdGNoZWQiKQoKc2NyZWVucygpCgojPT09PT09PT09PT09PSAuL3NjcmlwdC9zY3JlZW5zL3NjcmVlbiBqb3VybmFsIHN1YmplY3RzLnJweSA9PT09PT09PT0KZGVmIHNjcmVlbl9qb3VybmFsX3N1YmplY3RzKCk6CiAgICBmbj0iLi9zY3JpcHQvc2NyZWVucy9zY3JlZW4g
set cheat2=am91cm5hbCBzdWJqZWN0cy5ycHkiCiAgICB3aXRoIG9wZW4oZm4sICJyIikgYXMgZmlsZToKICAgICAgICBmYyA9IGZpbGUucmVhZCgpCgoKICAgICMgY29ycnVwdGlvbiBmb3IgdXBkYXRlZCBqb3VybmFsCiAgICBwYXR0PSd0ZXh0ICJce2ZvbnQ9S296R29QcjZOLVJlZ3VsYXJcLm90Zlx9XHtzaXplPSAzMFx9Q29ycjogXFsoP1A8bmFtZT5bYS16XSspX2NvcnJcXS8xMDBcey9zaXplXH1cey9mb250XH0iIGF0IGxlZnQnCiAgICByZXBsPSd0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZ9e3NpemU9IDMwfUNvcnI6IFtcZzxuYW1lPl9jb3JyXS8xMDB7L3NpemV9ey9mb250fSIgc3R5bGUgImd1aV90ZXh0IiBhdCBsZWZ0IGFjdGlvbiBTZXRWYXJpYWJsZSgiXGc8bmFtZT5fY29yciIsIFxnPG5hbWU+X2NvcnIgKyAxMCknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKCiAgICB3aXRoIG9wZW4oZm4sICJ3IikgYXMgZmlsZToKICAgICAgICBmaWxlLndyaXRlKGZjKQoKICAgIHByaW50IChmbisiIHBhdGNoZWQiKQoKc2NyZWVuX2pvdXJuYWxfc3ViamVjdHMoKQoKCiM9PT09PT09PT09PT09IC4vc2NyaXB0L2NoYXJhY3RlciBzY3JlZW5zL2NoYXJhY3RlciBzb2NpYWxpemUgam91cm5hbCBzY3JlZW4ucnB5ID09PT09PT09PQpkZWYgY2hhcmFjdGVyX3NvY2lhbGl6ZV9qb3VybmFsX3NjcmVlbigpOgogICAgZm49Ii4vc2NyaXB0L2NoYXJhY3RlciBzY3JlZW5zL2NoYXJhY3RlciBzb2NpYWxpemUgam91cm5hbCBzY3JlZW4ucnB5IgogICAgd2l0aCBvcGVuKGZuLCAiciIpIGFzIGZpbGU6CiAgICAgICAgZmMgPSBmaWxlLnJlYWQoKQoKICAgICMgY29ycnVwdGlvbiBmb3IgdXBkYXRlZCBqb3VybmFsCiAgICBwYXR0PSdFbmVyZ3kgYXZhaWxhYmxlOiBcW2VuZXJneVxdLzVcey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IicKICAgIHJlcGw9J3svc2l6ZX17L2NvbG9yfXsvZm9udH0iXG4gICAgICAgICAgICB0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZ9e2NvbG9yPSMwMDAwMDB9e3NpemU9IDE2fUVuZXJneSBhdmFpbGFibGU6IFtlbmVyZ3ldLzV7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgiZW5lcmd5Iiw1KScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHdpdGggb3BlbihmbiwgInciKSBhcyBmaWxlOgogICAgICAgIGZpbGUud3JpdGUoZmMpCgogICAgcHJpbnQgKGZuKyIgcGF0Y2hlZCIpCgpjaGFyYWN0ZXJfc29jaWFsaXplX2pvdXJuYWxfc2NyZWVuKCkKCgojPT09PT09PT09PT09PSAuL3NjcmlwdC9jaGFyYWN0ZXIgc2NyZWVucy9jaGFyYWN0ZXIgaW50aW1hY3kgam91cm5hbCBzY3JlZW4ucnB5ID09PT09PT09PQpkZWYgY2hhcmFjdGVyX2ludGltYWN5X2pvdXJuYWxfc2NyZWVuKCk6CiAgICBmbj0iLi9zY3JpcHQvY2hhcmFjdGVyIHNjcmVlbnMvY2hhcmFjdGVyIGludGltYWN5IGpvdXJuYWwgc2NyZWVuLnJweSIKICAgIHdpdGggb3BlbihmbiwgInIiKSBhcyBmaWxlOgogICAgICAgIGZjID0gZmlsZS5yZWFkKCkKCiAgICAjIGNvcnJ1cHRpb24gZm9yIHVwZGF0ZWQgam91cm5hbAogICAgcGF0dD0nRW5lcmd5IGF2YWlsYWJsZTogXFtlbmVyZ3lcXS81XHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSInCiAgICByZXBsPSd7L3NpemV9ey9jb2xvcn17L2ZvbnR9IlxuICAgICAgICAgICAgdGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAxNn1FbmVyZ3kgYXZhaWxhYmxlOiBbZW5lcmd5XS81ey9zaXplfXsvY29sb3J9ey9mb250fSIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoImVuZXJneSIsNSknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKCiAgICB3aXRoIG9wZW4oZm4sICJ3IikgYXMgZmlsZToKICAgICAgICBmaWxlLndyaXRlKGZjKQoKICAgIHByaW50IChmbisiIHBhdGNoZWQiKQoKY2hhcmFjdGVyX2ludGltYWN5X2pvdXJuYWxfc2NyZWVuKCkKCgoKIz09PT09PT09PT09PT0gLi9zY3JpcHQvc2NyZWVucy9zY3JlZW4gam91cm5hbC5ycHkgPT09PT09PT09CmRlZiBzY3JlZW5fam91cm5hbCgpOgogICAgZm49Ii4vc2NyaXB0L3NjcmVlbnMvc2NyZWVuIGpvdXJuYWwucnB5IgogICAgd2l0aCBvcGVuKGZuLCAiciIpIGFzIGZpbGU6CiAgICAgICAgZmMgPSBmaWxlLnJlYWQoKQoKICAgICN1cGRhdGVkIGpvdXJuYWwgc3RhdHMKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhclwub3RmXH1ce2NvbG9yPSMwMDAwMDBcfVx7c2l6ZT0gMjRcfVN1c3BpY2lvbjogXFtzdXNwaWNpb25cXS9cW21heF9zdXNwaWNpb25cXSBcey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IiBhdCBjZW50ZXInCiAgICByZXBsPSd0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZ9e2NvbG9yPSMwMDAwMDB9e3NpemU9IDI0fVN1c3BpY2lvbjogW3N1c3BpY2lvbl0vW21heF9zdXNwaWNpb25dIHsvc2l6ZX17L2NvbG9yfXsvZm9udH0iIGF0IGNlbnRlciBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgic3VzcGljaW9uIiwgc3VzcGljaW9uIC0gMiknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKCiAgICBwYXR0PSd0ZXh0ICJce2ZvbnQ9S296R29QcjZOLVJlZ3VsYXJcLm90Zlx9XHtjb2xvcj0jMDAwMDAwXH1ce3NpemU9IDI0XH1IZWF0OiBcW2hlYXRcXS8xMDAgXHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSIgYXQgY2VudGVyJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAyNH1IZWF0OiBbaGVhdF0vMTAwIHsvc2l6ZX17L2NvbG9yfXsvZm9udH0iIGF0IGNlbnRlciBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgiaGVhdCIsIGhlYXQgLSAyKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZcfVx7Y29sb3I9IzAwMDAwMFx9XHtzaXplPSAyNFx9RnJlZWRvbTogXFtfaW50X2ZyZWVcXS8xMDAgXHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSIgYXQgY2VudGVyJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAyNH1GcmVlZG9tOiBbX2ludF9mcmVlXS8xMDAgey9zaXplfXsvY29sb3J9ey9mb250fSIgYXQgY2VudGVyIHN0eWxlICJndWlfdGV4dCIgYWN0aW9uIFNldFZhcmlhYmxlKCJmcmVlZG9tIiwgZnJlZWRvbSsxKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhclwub3RmXH1ce2NvbG9yPSMwMDAwMDBcfVx7c2l6ZT0gMjRcfUludGVsbGlnZW5jZTogXFtpbnRlbGxpZ2VuY2VcXSBcey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IiBhdCBjZW50ZXInCiAgICByZXBsPSd0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVn
set cheat3=dWxhci5vdGZ9e2NvbG9yPSMwMDAwMDB9e3NpemU9IDI0fUludGVsbGlnZW5jZTogW2ludGVsbGlnZW5jZV0gey9zaXplfXsvY29sb3J9ey9mb250fSIgYXQgY2VudGVyIHN0eWxlICJndWlfdGV4dCIgYWN0aW9uIFNldFZhcmlhYmxlKCJpbnRlbGxpZ2VuY2UiLCBpbnRlbGxpZ2VuY2UgKyAxKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhclwub3RmXH1ce2NvbG9yPSMwMDAwMDBcfVx7c2l6ZT0gMjRcfU1vbmV5OiBcW21vbmV5XF0gXHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSIgYXQgY2VudGVyJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAyNH1Nb25leTogW21vbmV5XSB7L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBhdCBjZW50ZXIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoIm1vbmV5IiwgbW9uZXkgKyAxMDApJwogICAgZmMgPSByZS5zdWIocGF0dCwgcmVwbCwgZmMsIGZsYWdzPXJlLk0pCgogICAgcGF0dD0ndGV4dCAiXHtmb250PUtvekdvUHI2Ti1SZWd1bGFyXC5vdGZcfVx7Y29sb3I9IzAwMDAwMFx9XHtzaXplPSAyNFx9U3VwcGxpZXM6IFxbc3VwcGxpZXNcXVx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iIGF0IGNlbnRlcicKICAgIHJlcGw9J3RleHRidXR0b24gIntmb250PUtvekdvUHI2Ti1SZWd1bGFyLm90Zn17Y29sb3I9IzAwMDAwMH17c2l6ZT0gMjR9U3VwcGxpZXM6IFtzdXBwbGllc117L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBhdCBjZW50ZXIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoInN1cHBsaWVzIiwgc3VwcGxpZXMrMTApJwogICAgZmMgPSByZS5zdWIocGF0dCwgcmVwbCwgZmMsIGZsYWdzPXJlLk0pCgogICAgcGF0dD0ndGV4dCAiXHtmb250PUtvekdvUHI2Ti1SZWd1bGFyLm90Zlx9XHtjb2xvcj0jMDAwMDAwXH1ce3NpemU9IDI0XH1SZXNlYXJjaDogXFtyZXNfcG9pbnRzXF1cey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IiBhdCBjZW50ZXInCiAgICByZXBsPSd0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZ9e2NvbG9yPSMwMDAwMDB9e3NpemU9IDI0fVJlc2VhcmNoOiBbcmVzX3BvaW50c117L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBhdCBjZW50ZXIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoInJlc19wb2ludHMiLCByZXNfcG9pbnRzKzEwKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZcfVx7Y29sb3I9IzAwMDAwMFx9XHtzaXplPSAyNFx9U2VydW1zOiBcW3NlcnVtXF1cey9zaXplXH1cey9jb2xvclx9XHsvZm9udFx9IiBhdCBjZW50ZXInCiAgICByZXBsPSd0ZXh0YnV0dG9uICJ7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZ9e2NvbG9yPSMwMDAwMDB9e3NpemU9IDI0fVNlcnVtczogW3NlcnVtXXsvc2l6ZX17L2NvbG9yfXsvZm9udH0iIGF0IGNlbnRlciBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgic2VydW0iLCBzZXJ1bSszKScKICAgIGZjID0gcmUuc3ViKHBhdHQsIHJlcGwsIGZjLCBmbGFncz1yZS5NKQoKICAgIHBhdHQ9J3RleHQgIlx7Zm9udD1Lb3pHb1ByNk4tUmVndWxhci5vdGZcfVx7Y29sb3I9IzAwMDAwMFx9XHtzaXplPSAyNFx9TWFucG93ZXI6IFxbbWFucG93ZXJcXVx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iIGF0IGNlbnRlcicKICAgIHJlcGw9J3RleHRidXR0b24gIntmb250PUtvekdvUHI2Ti1SZWd1bGFyLm90Zn17Y29sb3I9IzAwMDAwMH17c2l6ZT0gMjR9TWFucG93ZXI6IFttYW5wb3dlcl17L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBhdCBjZW50ZXIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoIm1hbnBvd2VyIiwgbWFucG93ZXIrMSknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKCgogICAgd2l0aCBvcGVuKGZuLCAidyIpIGFzIGZpbGU6CiAgICAgICAgZmlsZS53cml0ZShmYykKCiAgICBwcmludCAoZm4rIiBwYXRjaGVkIikKCnNjcmVlbl9qb3VybmFsKCkKCgojPT09PT09PT09PT09PSAuL3NjcmlwdC9zY3JlZW5zL3NjcmVlbiBiaW9zLnJweSA9PT09PT09PT0KZGVmIHNjcmVlbl9iaW9zKCk6CiAgICBmbj0iLi9zY3JpcHQvc2NyZWVucy9zY3JlZW4gYmlvcy5ycHkiCiAgICB3aXRoIG9wZW4oZm4sICJyIikgYXMgZmlsZToKICAgICAgICBmYyA9IGZpbGUucmVhZCgpCgoKICAgICMgY29ycnVwdGlvbiBmb3IgdXBkYXRlZCBqb3VybmFsCiAgICBwYXR0PSdcXFxcblxcXFxuQ3VycmVudCB0cnVzdDogXFt2ZXJhX3RydXN0XF1cXFxcblxcXFxuQ3VycmVudCBsb3ZlOiBcW3ZlcmFfbG92ZVxdXHsvc2l6ZVx9XHsvY29sb3JcfVx7L2ZvbnRcfSInCiAgICByZXBsPSd7L3NpemV9ey9jb2xvcn17L2ZvbnR9IlxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAxOH1cXFxcblxcXFxuQ3VycmVudCB0cnVzdDogW3ZlcmFfdHJ1c3Rdey9zaXplfXsvY29sb3J9ey9mb250fSIgc3R5bGUgImd1aV90ZXh0IiBhY3Rpb24gU2V0VmFyaWFibGUoInZlcmFfdHJ1c3QiLCB2ZXJhX3RydXN0ICsgMSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRidXR0b24gIntmb250PUtvekdvUHI2Ti1SZWd1bGFyLm90Zn17Y29sb3I9IzAwMDAwMH17c2l6ZT0gMTh9XFxcXG5cXFxcbkN1cnJlbnQgbG92ZTogW3ZlcmFfbG92ZV17L3NpemV9ey9jb2xvcn17L2ZvbnR9IiBzdHlsZSAiZ3VpX3RleHQiIGFjdGlvbiBTZXRWYXJpYWJsZSgidmVyYV9sb3ZlIiwgdmVyYV9sb3ZlICsgMSknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKICAgIAogICAgI0xvdmUgb2Ygb3RoZXIgY2hhcmFjdGVycwogICAgcGF0dD0ndGV4dCAiXHtmb250PUtvekdvUHI2Ti1SZWd1bGFyXC5vdGZcfVx7Y29sb3I9IzAwMDAwMFx9XHtzaXplPSAxOFx9KD9QPGRlc2NyPi4rKVxcXFxuXFxcXG5Mb3ZlOiBcWyg/UDxubT5bYS16XSspX2xvdmVcXVx7L3NpemVcfVx7L2NvbG9yXH1cey9mb250XH0iJwogICAgcmVwbD0ndGV4dGJ1dHRvbiAie2ZvbnQ9S296R29QcjZOLVJlZ3VsYXIub3RmfXtjb2xvcj0jMDAwMDAwfXtzaXplPSAxOH1cZzxkZXNjcj5cXFxcblxcXFxuTG92ZTogW1xnPG5tPl9sb3ZlXXsvc2l6ZX17L2NvbG9yfXsvZm9udH0iIHN0eWxlICJndWlfdGV4dCIgYWN0aW9uIFNldFZhcmlhYmxlKCJcZzxubT5fbG92ZSIsIFxnPG5tPl9sb3ZlICsgMSknCiAgICBmYyA9IHJlLnN1YihwYXR0LCByZXBsLCBmYywgZmxhZ3M9cmUuTSkKICAgIAogICAgd2l0aCBvcGVuKGZuLCAidyIpIGFzIGZpbGU6CiAgICAgICAgZmlsZS53cml0ZShmYykKCnNjcmVlbl9iaW9zKCkKCgpwcmludCAoIiAgICBTdWNjZXNzISBDaGVhdHMgYXJlIG5vdyBlbmFibGVkISIpCg==
REM --------------------------------------------------------------------------------
REM !! DO NOT EDIT BELOW THIS LINE !!
REM --------------------------------------------------------------------------------
set "v=1.3"
title Take Over Inject v%version%
:init
REM --------------------------------------------------------------------------------
REM Splash screen
REM --------------------------------------------------------------------------------
cls

echo  ----------------------------------------------------
echo.
echo  Take Over Cheat Injector 
echo.             
echo   Vesrion: %v%
echo   by Sleepingkirby
echo   built on top of RL Cheat Injector by SLDR @ F95zone.com
echo  ----------------------------------------------------
echo.
echo.


REM --------------------------------------------------------------------------------
REM We need powershell for later, make sure it exists
REM --------------------------------------------------------------------------------
if not exist "%SystemRoot%\system32\WindowsPowerShell\v1.0\powershell.exe" (
	echo    ! Error: Powershell is required, unable to continue.
	echo             This is included in Windows 7, 8, 10. XP/Vista users can
	echo             download it here: http://support.microsoft.com/kb/968929
	echo.
	pause>nul|set/p=.            Press any key to exit...
	exit
)

REM --------------------------------------------------------------------------------
REM Set our paths, and make sure we can find python exe
REM --------------------------------------------------------------------------------
set "currentdir=%~dp0%"
set "pythondir=%currentdir%..\lib\py3-windows-x86_64\"
set "renpydir=%currentdir%..\renpy\"
set "gamedir=%currentdir%"
if exist "game" if exist "lib" if exist "renpy" (
	set "pythondir=%currentdir%lib\windows-x86_64\"
	set "renpydir=%currentdir%renpy\"
	set "gamedir=%currentdir%game\"
)

if not exist "%pythondir%python.exe" (
	echo    ! Error: Cannot locate python.exe, unable to continue.
	echo             Are you sure we're in the game's root directory?
	echo.
	pause>nul|set/p=.            Press any key to exit...
	exit
)

:menu
REM --------------------------------------------------------------------------------
REM Menu selection
REM --------------------------------------------------------------------------------
set exitoption=
echo   Available Options:
echo     1) Apply cheat
echo     2) Quit
echo.
set /p option=.  Enter a number: 
echo.
echo  ----------------------------------------------------
echo.
if "%option%" == "2" (
    goto quit
)

if exist "%gamedir%screens.rpy.orig" (
echo Backup files found. This probably means it was already patched. No need to further action. Exitting...
)

echo Green No backup's found. Safe to progress.

REM --------------------------------------------------------------------------------
REM Write _rpatool.py from our base64 strings
REM --------------------------------------------------------------------------------
set "rpatool=%currentdir%_rpatool.py"
echo   Creating rpatool...
if exist "%rpatool%.tmp" (
	del "%rpatool%.tmp"
)
if exist "%rpatool%" (
	del "%rpatool%"
)

echo %rpatool1%>> "%rpatool%.tmp"
echo %rpatool2%>> "%rpatool%.tmp"
echo %rpatool3%>> "%rpatool%.tmp"
echo %rpatool4%>> "%rpatool%.tmp"
echo %rpatool5%>> "%rpatool%.tmp"
echo %rpatool6%>> "%rpatool%.tmp"
set "rpatoolps=%rpatool:[=`[%"
set "rpatoolps=%rpatoolps:]=`]%"
set "rpatoolps=%rpatoolps:^=^^%"
set "rpatoolps=%rpatoolps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%rpatoolps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%rpatoolps%.tmp\"))) }"

echo.

REM --------------------------------------------------------------------------------
REM Unpack RPA
REM --------------------------------------------------------------------------------
echo   Searching for RPA packages
cd "%gamedir%"
set "PYTHONPATH=%pythondir%Lib"
for %%f in (*.rpa) do (
	echo    + Unpacking "%%~nf%%~xf" - %%~zf bytes
	"%pythondir%python.exe" -O "%rpatool%" -x "%%f"
)
echo.

REM --------------------------------------------------------------------------------
REM Clean up
REM --------------------------------------------------------------------------------
echo   Cleaning up temporary files...
REM del "%rpatool%.tmp"
REM del "%rpatool%"
echo.
if "%option%" == "2" (
	goto finish
)

:cheat
REM --------------------------------------------------------------------------------
REM Make sure cheat.py doesn't already exist
REM --------------------------------------------------------------------------------
set "cheat=%currentdir%_cheat.py"
echo   Creating cheat...
if exist "%cheat%.tmp" (
	del "%cheat%.tmp"
)
if exist "%cheat%" (
	del "%cheat%"
)

REM --------------------------------------------------------------------------------
REM Create cheat.py
REM --------------------------------------------------------------------------------
echo %cheat1%>> "%cheat%.tmp"
echo %cheat2%>> "%cheat%.tmp"
echo %cheat3%>> "%cheat%.tmp"
set "cheatps=%cheat:[=`[%"
set "cheatps=%cheatps:]=`]%"
set "cheatps=%cheatps:^=^^%"
set "cheatps=%cheatps:&=^&%"
powershell.exe -nologo -noprofile -noninteractive -command "& { [IO.File]::WriteAllBytes(\"%cheatps%\", [Convert]::FromBase64String([IO.File]::ReadAllText(\"%cheatps%.tmp\"))) }"

REM --------------------------------------------------------------------------------
REM Run cheat.py
REM --------------------------------------------------------------------------------
cd "%gamedir%"
"%pythondir%python.exe" -O "%cheat%"

echo.

REM --------------------------------------------------------------------------------
REM Delete temporary files
REM --------------------------------------------------------------------------------
echo   Cleaning up temporary files...
del "%cheat%.tmp"
del "%cheat%"
echo.
goto finish


:finish
REM --------------------------------------------------------------------------------
REM We are done
REM --------------------------------------------------------------------------------
echo  ----------------------------------------------------
echo.
echo    Finished!
echo.
echo    Enter "1" to go back to the menu, or any other
set /p exitoption=.   key to exit: 
echo.
echo  ----------------------------------------------------
echo.
if "%exitoption%"=="1" goto menu

:quit
exit
